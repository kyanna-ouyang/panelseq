# run in R

# install and load packages
if (!requireNamespace("BiocManager", quietly = TRUE))
  install.packages("BiocManager")
BiocManager::install("biomaRt")
library(biomaRt)
library(tidyverse)

# import tsv file
snvs1 <- read.csv("EL10T-hC1-r1_S5.snvs.tsv", sep = "\t", header = FALSE)
snvs2 <- read.csv("EL2T-organoids_S1.snvs.tsv", sep = "\t", header = FALSE)
snvs3 <- read.csv("EL8N-tissue_S8.snvs.tsv", sep = "\t", header = FALSE)
snvs4 <- read.csv("EL8T-hC1-s1_S4.snvs.tsv", sep = "\t", header = FALSE)
snvs5 <- read.csv("EL8T-hC1-s2_S6.snvs.tsv", sep = "\t", header = FALSE)
snvs6 <- read.csv("EL8T-in1-s1_S7.snvs.tsv", sep = "\t", header = FALSE)
snvs7 <- read.csv("EL8T-in1-s2_S9.snvs.tsv", sep = "\t", header = FALSE)
snvs8 <- read.csv("EL8T-out2-s1_S11.snvs.tsv", sep = "\t", header = FALSE)
snvs9 <- read.csv("EL8T-tissue_S2.snvs.tsv", sep = "\t", header = FALSE)

# filter for variants that pass all quality filters
snvs1 <- snvs1[which(snvs1$V6=="PASS"),]
snvs2 <- snvs2[which(snvs2$V6=="PASS"),]
snvs3 <- snvs3[which(snvs3$V6=="PASS"),]
snvs4 <- snvs4[which(snvs4$V6=="PASS"),]
snvs5 <- snvs5[which(snvs5$V6=="PASS"),]
snvs6 <- snvs6[which(snvs6$V6=="PASS"),]
snvs7 <- snvs7[which(snvs7$V6=="PASS"),]
snvs8 <- snvs8[which(snvs8$V6=="PASS"),]
snvs9 <- snvs9[which(snvs9$V6=="PASS"),]

# delete "chr" from chromosome column
snvs1$V1 <- gsub("chr", "", as.character(snvs1$V1))
snvs2$V1 <- gsub("chr", "", as.character(snvs2$V1))
snvs3$V1 <- gsub("chr", "", as.character(snvs3$V1))
snvs4$V1 <- gsub("chr", "", as.character(snvs4$V1))
snvs5$V1 <- gsub("chr", "", as.character(snvs5$V1))
snvs6$V1 <- gsub("chr", "", as.character(snvs6$V1))
snvs7$V1 <- gsub("chr", "", as.character(snvs7$V1))
snvs8$V1 <- gsub("chr", "", as.character(snvs8$V1))
snvs9$V1 <- gsub("chr", "", as.character(snvs9$V1))

# add sample column
snvs1[,7] <- "EL10T-hC1-r1_S5"
snvs2[,7] <- "EL2T-organoids_S1"
snvs3[,7] <- "EL8N-tissue_S8"
snvs4[,7] <- "EL8T-hC1-s1_S4"
snvs5[,7] <- "EL8T-hC1-s2_S6"
snvs6[,7] <- "EL8T-in1-s1_S7"
snvs7[,7] <- "EL8T-in1-s2_S9"
snvs8[,7] <- "EL8T-out2-s1_S11"
snvs9[,7] <- "EL8T-tissue_S2"

# join snvs tables
snvs <- rbind(snvs1, snvs2, snvs3, snvs4, snvs5, snvs6, snvs7, snvs8, snvs9)

# rename columns
names(snvs)[1] <- "chr"
names(snvs)[2] <- "pos"
names(snvs)[3] <- "ref"
names(snvs)[4] <- "alt"
names(snvs)[5] <- "qual"
names(snvs)[6] <- "filter"
names(snvs)[7] <- "sample"

# reorder columns
snvs <- snvs[,c(7,1,2,3,4,5,6)]

# retrieve gene name using chromosome number and location
# load biomaRt package
library(biomaRt)
# connect to Ensembl live gene mart human dataset (GRCh38)
ensembl <- useEnsembl(biomart="ensembl", dataset="hsapiens_gene_ensembl")
# attributes to be outputted
attributes <- c("ensembl_gene_id", "hgnc_symbol", "chromosome_name", "start_position", "end_position")
# filters for retrieving gene name
filters <- c("chromosome_name", "start", "end")
# inputting values for retrieving
values <- list(chromosome=snvs$chr, start=snvs$pos, end=snvs$pos)
# retrieve genes
genes <- getBM(attributes = attributes,
                   filters = filters,
                   values = values,
                   mart = ensembl)
# rename genes column names
names(genes)[3] <- "chr"

# order tables by variant/gene chromosome then position
snvs$chr <- as.numeric(snvs$chr)
snvs <- snvs[with(snvs, order(chr,pos)),]

genes$chr <- as.numeric(genes$chr)
genes <- genes[with(genes, order(chr, start_position)),]

# join snvs and genes table by position
library(data.table)
variants <- genes[snvs, on = .(chr, start_position <= pos, end_position >= pos),
                  .(sample, chr, pos, ref, alt, hgnc_symbol, ensembl_gene_id)]

# extract variants in panel genes
panelgenes <- c("ABL1","AKT1","ALK","APC","ATM","BRAF","CDH1","CDKN2A","CSF1R",
                "CTNNB1","EGFR","ERBB2","ERBB4","EZH2","FBXW7","FGFR1","FGFR2",
                "FGFR3","FLT3","GNA11","GNAQ","GNAS","HNF1A","HRAS","IDH1",
                "IDH2","JAK2","JAK3","KDR","KIT","KRAS","MET","MLH1","MPL",
                "NOTCH1","NPM1","NRAS","PDGFRA","PIK3CA","PTEN","PTPN11","RB1",
                "RET","SMAD4","SMARCB1","SMO","SRC","STK11","TP53","VHL")
panelvars <- subset(variants, hgnc_symbol %in% panelgenes)

# extract variants found multiple times (in diff samples)
repeatvars <- panelvars %>% 
  group_by(chr, pos, ref, alt) %>% 
  filter(n() > 1)
